#!/bin/bash

# Redirect standard input, output, and error to the terminal (tty)
# to ensure clean interaction with the user and avoid interference
# from the exploitation script.
exec </dev/tty >/dev/tty 2>/dev/tty

apples=$((RANDOM % 10 + 1))
bananas=$((RANDOM % 10 + 1))
pears=$((RANDOM % 10 + 1))
coconuts=$((RANDOM % 10 + 1))
strawberries=$((RANDOM % 10 + 1))
grapes=$((RANDOM % 10 + 1))

fruits=()
for ((i=1; i<=apples; i++)); do
    fruits+=("🍎")
done
for ((i=1; i<=bananas; i++)); do
    fruits+=("🍌")
done
for ((i=1; i<=pears; i++)); do
    fruits+=("🍐")
done
for ((i=1; i<=coconuts; i++)); do
    fruits+=("🥥")
done
for ((i=1; i<=strawberries; i++)); do
    fruits+=("🍓")
done
for ((i=1; i<=grapes; i++)); do
    fruits+=("🍇")
done

shuffled_fruits=($(shuf -e "${fruits[@]}"))

echo "Here is a basket of mixed fruits:"
for fruit in "${shuffled_fruits[@]}"; do
    echo -n "$fruit "
done
echo
echo

fruit_type=$((RANDOM % 6))
case $fruit_type in
    0)
        question="apples (🍎)"
        correct_answer=$apples
        ;;
    1)
        question="bananas (🍌)"
        correct_answer=$bananas
        ;;
    2)
        question="pears (🍐)"
        correct_answer=$pears
        ;;
    3)
        question="coconuts (🥥)"
        correct_answer=$coconuts
        ;;
    4)
        question="strawberries (🍓)"
        correct_answer=$strawberries
        ;;
    5)
        question="grapes (🍇)"
        correct_answer=$grapes
        ;;
esac

while true; do
    echo "How many $question are in the basket?"
    read user_input

    if [[ "$user_input" -eq "$correct_answer" ]]; then
        echo
        echo "Correct! Here is your flag:"
        cat /flag/flag6 | /usr/games/lolcat
        break
    else
        echo "Incorrect answer. Please try again."
    fi
done

